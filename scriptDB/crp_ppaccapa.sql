CREATE OR REPLACE PACKAGE Ppaccapa IS

/******************************************************************************
 NOME:          PPACCAPA
 DESCRIZIONE:   

 ARGOMENTI:   
 RITORNA:     

 ECCEZIONI:   

 ANNOTAZIONI:  

 REVISIONI:
 Rev. Data       Autore Descrizione
 ---- ---------- ------ --------------------------------------------------------
 1    20/01/2003             
******************************************************************************/

FUNCTION  VERSIONE              RETURN VARCHAR2;

  PROCEDURE MAIN      (P_PRENOTAZIONE IN NUMBER,
                  PASSO IN NUMBER);
END;
/

CREATE OR REPLACE PACKAGE BODY Ppaccapa IS
W_UTENTE   VARCHAR2(10);
W_AMBIENTE   VARCHAR2(10);
W_ENTE      VARCHAR2(10);
W_LINGUA   VARCHAR2(1);
W_PRENOTAZIONE   NUMBER(10);
errore      VARCHAR2(6);
P_DAL      DATE;
P_AL      DATE;
P_PROSPETTO_INIZ   VARCHAR2(8);
P_PROSPETTO_FINE   VARCHAR2(8);
P_OPZIONE   VARCHAR2(2);
P_CONTRATTO   VARCHAR2(5);
P_LIVELLO   VARCHAR2(4);
P_POSIZIONE   VARCHAR2(4);
P_ATTIVITA   VARCHAR2(4);
P_QUALIFICA   VARCHAR2(8);
P_DI_RUOLO   VARCHAR2(2);
P_FIGURA   VARCHAR2(8);
P_GESTIONE   VARCHAR2(4);
P_SETTORE   VARCHAR2(15);
P_SEDE      VARCHAR2(8);
P_RUOLO      VARCHAR2(4);
P_RAPPORTO   VARCHAR2(4);
P_GRUPPO   VARCHAR2(12);
P_FATTORE   VARCHAR2(6);
P_ASSISTENZA   VARCHAR2(6);
P_CDC      VARCHAR2(8);
P_FASCIA   VARCHAR2(2);
   
   FUNCTION VERSIONE  RETURN VARCHAR2 IS
   BEGIN
   RETURN 'V1.0 del 20/01/2003';
   END VERSIONE;

-- Pulizia registrazioni senza valori
PROCEDURE FASE_6 IS
BEGIN
  DELETE FROM CALCOLO_PROSPETTI_PRESENZA capa
   WHERE capa.prenotazione = w_prenotazione
 AND NVL(val_01,0) = 0
 AND NVL(val_02,0) = 0
 AND NVL(val_03,0) = 0
 AND NVL(val_04,0) = 0
 AND NVL(val_05,0) = 0
 AND NVL(val_06,0) = 0
 AND NVL(val_07,0) = 0
 AND NVL(val_08,0) = 0
 AND NVL(val_09,0) = 0
 AND NVL(val_10,0) = 0
 AND NVL(val_11,0) = 0
 AND NVL(val_12,0) = 0
 AND NVL(val_13,0) = 0
 AND NVL(val_14,0) = 0
 AND NVL(val_15,0) = 0
 AND NVL(val_16,0) = 0
 AND NVL(val_17,0) = 0
 AND NVL(val_18,0) = 0
 AND NVL(val_19,0) = 0
 AND NVL(val_20,0) = 0
  ;
END;
-- Determinazione colonne e loro valori
PROCEDURE FASE_5 IS
CURSOR capa IS
SELECT capa.prpa_codice
  ,capa.rain_ci
  ,capa.tipo_record
  ,capa.ROWID
  ,capa.dal
  ,capa.al
  ,capa.sede_numero
  ,capa.ceco_codice
  ,capa.gest_codice
  ,capa.sett_numero
  FROM CALCOLO_PROSPETTI_PRESENZA capa
 WHERE capa.prenotazione = w_prenotazione
;
d_prpa_codice VARCHAR2(8) ;
d_rain_ci  NUMBER(8) ;
d_tipo_record VARCHAR2(2) ;
d_rowid  VARCHAR2(30) ;
d_dal DATE ;
d_al DATE ;
d_sede_numero  NUMBER(6) ;
d_ceco_codice VARCHAR2(8) ;
d_gest_codice VARCHAR2(4) ;
d_sett_numero  NUMBER(6) ;
CURSOR rppa IS
SELECT rppa.tipo
  ,rppa.colonna
  ,rppa.stampa
  ,rppa.sequenza
  FROM RIGHE_PROSPETTO_PRESENZA rppa
 WHERE rppa.prospetto = d_prpa_codice
 ORDER BY
   rppa.sequenza
;
d_tipo   VARCHAR2(2) ;
d_codice VARCHAR2(8) ;
d_stampa VARCHAR2(1) ;
d_sequenza NUMBER(2) ;
d_descrizione VARCHAR2(8) ;
d_gestione   VARCHAR2(1) ;
d_valore   NUMBER ;
d_cod_01 VARCHAR2(8) ;
d_ges_01 VARCHAR2(1) ;
d_des_01 VARCHAR2(8) ;
d_val_01   NUMBER ;
d_cod_02 VARCHAR2(8) ;
d_ges_02 VARCHAR2(1) ;
d_des_02 VARCHAR2(8) ;
d_val_02   NUMBER ;
d_cod_03 VARCHAR2(8) ;
d_ges_03 VARCHAR2(1) ;
d_des_03 VARCHAR2(8) ;
d_val_03   NUMBER ;
d_cod_04 VARCHAR2(8) ;
d_ges_04 VARCHAR2(1) ;
d_des_04 VARCHAR2(8) ;
d_val_04   NUMBER ;
d_cod_05 VARCHAR2(8) ;
d_ges_05 VARCHAR2(1) ;
d_des_05 VARCHAR2(8) ;
d_val_05   NUMBER ;
d_cod_06 VARCHAR2(8) ;
d_ges_06 VARCHAR2(1) ;
d_des_06 VARCHAR2(8) ;
d_val_06   NUMBER ;
d_cod_07 VARCHAR2(8) ;
d_ges_07 VARCHAR2(1) ;
d_des_07 VARCHAR2(8) ;
d_val_07   NUMBER ;
d_cod_08 VARCHAR2(8) ;
d_ges_08 VARCHAR2(1) ;
d_des_08 VARCHAR2(8) ;
d_val_08   NUMBER ;
d_cod_09 VARCHAR2(8) ;
d_ges_09 VARCHAR2(1) ;
d_des_09 VARCHAR2(8) ;
d_val_09   NUMBER ;
d_cod_10 VARCHAR2(8) ;
d_ges_10 VARCHAR2(1) ;
d_des_10 VARCHAR2(8) ;
d_val_10   NUMBER ;
d_cod_11 VARCHAR2(8) ;
d_ges_11 VARCHAR2(1) ;
d_des_11 VARCHAR2(8) ;
d_val_11   NUMBER ;
d_cod_12 VARCHAR2(8) ;
d_ges_12 VARCHAR2(1) ;
d_des_12 VARCHAR2(8) ;
d_val_12   NUMBER ;
d_cod_13 VARCHAR2(8) ;
d_ges_13 VARCHAR2(1) ;
d_des_13 VARCHAR2(8) ;
d_val_13   NUMBER ;
d_cod_14 VARCHAR2(8) ;
d_ges_14 VARCHAR2(1) ;
d_des_14 VARCHAR2(8) ;
d_val_14   NUMBER ;
d_cod_15 VARCHAR2(8) ;
d_ges_15 VARCHAR2(1) ;
d_des_15 VARCHAR2(8) ;
d_val_15   NUMBER ;
d_cod_16 VARCHAR2(8) ;
d_ges_16 VARCHAR2(1) ;
d_des_16 VARCHAR2(8) ;
d_val_16   NUMBER ;
d_cod_17 VARCHAR2(8) ;
d_ges_17 VARCHAR2(1) ;
d_des_17 VARCHAR2(8) ;
d_val_17   NUMBER ;
d_cod_18 VARCHAR2(8) ;
d_ges_18 VARCHAR2(1) ;
d_des_18 VARCHAR2(8) ;
d_val_18   NUMBER ;
d_cod_19 VARCHAR2(8) ;
d_ges_19 VARCHAR2(1) ;
d_des_19 VARCHAR2(8) ;
d_val_19   NUMBER ;
d_cod_20 VARCHAR2(8) ;
d_ges_20 VARCHAR2(1) ;
d_des_20 VARCHAR2(8) ;
d_val_20   NUMBER ;
BEGIN
  OPEN capa;
  LOOP
 FETCH capa INTO d_prpa_codice,d_rain_ci,d_tipo_record,d_rowid,
 d_dal,d_al,d_sede_numero,d_ceco_codice,
 d_gest_codice,d_sett_numero;
 EXIT  WHEN capa%NOTFOUND;
 d_cod_01 := NULL;
 d_des_01 := NULL;
 d_ges_01 := NULL;
 d_val_01 := NULL;
 d_cod_02 := NULL;
 d_des_02 := NULL;
 d_ges_02 := NULL;
 d_val_02 := NULL;
 d_cod_03 := NULL;
 d_des_03 := NULL;
 d_ges_03 := NULL;
 d_val_03 := NULL;
 d_cod_04 := NULL;
 d_des_04 := NULL;
 d_ges_04 := NULL;
 d_val_04 := NULL;
 d_cod_05 := NULL;
 d_des_05 := NULL;
 d_ges_05 := NULL;
 d_val_05 := NULL;
 d_cod_06 := NULL;
 d_des_06 := NULL;
 d_ges_06 := NULL;
 d_val_06 := NULL;
 d_cod_07 := NULL;
 d_des_07 := NULL;
 d_ges_07 := NULL;
 d_val_07 := NULL;
 d_cod_08 := NULL;
 d_des_08 := NULL;
 d_ges_08 := NULL;
 d_val_08 := NULL;
 d_cod_09 := NULL;
 d_des_09 := NULL;
 d_ges_09 := NULL;
 d_val_09 := NULL;
 d_cod_10 := NULL;
 d_des_10 := NULL;
 d_ges_10 := NULL;
 d_val_10 := NULL;
 d_cod_11 := NULL;
 d_des_11 := NULL;
 d_ges_11 := NULL;
 d_val_11 := NULL;
 d_cod_12 := NULL;
 d_des_12 := NULL;
 d_ges_12 := NULL;
 d_val_12 := NULL;
 d_cod_13 := NULL;
 d_des_13 := NULL;
 d_ges_13 := NULL;
 d_val_13 := NULL;
 d_cod_14 := NULL;
 d_des_14 := NULL;
 d_ges_14 := NULL;
 d_val_14 := NULL;
 d_cod_15 := NULL;
 d_des_15 := NULL;
 d_ges_15 := NULL;
 d_val_15 := NULL;
 d_cod_16 := NULL;
 d_des_16 := NULL;
 d_ges_16 := NULL;
 d_val_16 := NULL;
 d_cod_17 := NULL;
 d_des_17 := NULL;
 d_ges_17 := NULL;
 d_val_17 := NULL;
 d_cod_18 := NULL;
 d_des_18 := NULL;
 d_ges_18 := NULL;
 d_val_18 := NULL;
 d_cod_19 := NULL;
 d_des_19 := NULL;
 d_ges_19 := NULL;
 d_val_19 := NULL;
 d_cod_20 := NULL;
 d_des_20 := NULL;
 d_ges_20 := NULL;
 d_val_20 := NULL;
 OPEN rppa;
 LOOP
  FETCH rppa INTO d_tipo,d_codice,d_stampa,d_sequenza;
  EXIT WHEN rppa%NOTFOUND;
  Ppaccapa2.CALCOLO_VALORE
  (d_rain_ci,d_tipo,d_codice,d_tipo_record,d_stampa
  ,d_sede_numero,d_ceco_codice,d_gest_codice,d_sett_numero
  ,d_descrizione,d_gestione,d_valore,d_dal,d_al);
  IF d_sequenza = 01 THEN
 d_cod_01  := d_codice;
 d_des_01  := d_descrizione;
 d_ges_01  := d_gestione;
 d_val_01  := d_valore;
  ELSIF d_sequenza = 02 THEN
 d_cod_02  := d_codice;
 d_des_02  := d_descrizione;
 d_ges_02  := d_gestione;
 d_val_02  := d_valore;
  ELSIF d_sequenza = 03 THEN
 d_cod_03  := d_codice;
 d_des_03  := d_descrizione;
 d_ges_03  := d_gestione;
 d_val_03  := d_valore;
  ELSIF d_sequenza = 04 THEN
 d_cod_04  := d_codice;
 d_des_04  := d_descrizione;
 d_ges_04  := d_gestione;
 d_val_04  := d_valore;
  ELSIF d_sequenza = 05 THEN
 d_cod_05  := d_codice;
 d_des_05  := d_descrizione;
 d_ges_05  := d_gestione;
 d_val_05  := d_valore;
  ELSIF d_sequenza = 06 THEN
 d_cod_06  := d_codice;
 d_des_06  := d_descrizione;
 d_ges_06  := d_gestione;
 d_val_06  := d_valore;
  ELSIF d_sequenza = 07 THEN
 d_cod_07  := d_codice;
 d_des_07  := d_descrizione;
 d_ges_07  := d_gestione;
 d_val_07  := d_valore;
  ELSIF d_sequenza = 08 THEN
 d_cod_08  := d_codice;
 d_des_08  := d_descrizione;
 d_ges_08  := d_gestione;
 d_val_08  := d_valore;
  ELSIF d_sequenza = 09 THEN
 d_cod_09  := d_codice;
 d_des_09  := d_descrizione;
 d_ges_09  := d_gestione;
 d_val_09  := d_valore;
  ELSIF d_sequenza = 10 THEN
 d_cod_10  := d_codice;
 d_des_10  := d_descrizione;
 d_ges_10  := d_gestione;
 d_val_10  := d_valore;
  ELSIF d_sequenza = 11 THEN
 d_cod_11  := d_codice;
 d_des_11  := d_descrizione;
 d_ges_11  := d_gestione;
 d_val_11  := d_valore;
  ELSIF d_sequenza = 12 THEN
 d_cod_12  := d_codice;
 d_des_12  := d_descrizione;
 d_ges_12  := d_gestione;
 d_val_12  := d_valore;
  ELSIF d_sequenza = 13 THEN
 d_cod_13  := d_codice;
 d_des_13  := d_descrizione;
 d_ges_13  := d_gestione;
 d_val_13  := d_valore;
  ELSIF d_sequenza = 14 THEN
 d_cod_14  := d_codice;
 d_des_14  := d_descrizione;
 d_ges_14  := d_gestione;
 d_val_14  := d_valore;
  ELSIF d_sequenza = 15 THEN
 d_cod_15  := d_codice;
 d_des_15  := d_descrizione;
 d_ges_15  := d_gestione;
 d_val_15  := d_valore;
  ELSIF d_sequenza = 16 THEN
 d_cod_16  := d_codice;
 d_des_16  := d_descrizione;
 d_ges_16  := d_gestione;
 d_val_16  := d_valore;
  ELSIF d_sequenza = 17 THEN
 d_cod_17  := d_codice;
 d_des_17  := d_descrizione;
 d_ges_17  := d_gestione;
 d_val_17  := d_valore;
  ELSIF d_sequenza = 18 THEN
 d_cod_18  := d_codice;
 d_des_18  := d_descrizione;
 d_ges_18  := d_gestione;
 d_val_18  := d_valore;
  ELSIF d_sequenza = 19 THEN
 d_cod_19  := d_codice;
 d_des_19  := d_descrizione;
 d_ges_19  := d_gestione;
 d_val_19  := d_valore;
  ELSIF d_sequenza = 20 THEN
 d_cod_20  := d_codice;
 d_des_20  := d_descrizione;
 d_ges_20  := d_gestione;
 d_val_20  := d_valore;
  END IF;
 END LOOP;
 CLOSE rppa;
 UPDATE CALCOLO_PROSPETTI_PRESENZA capa
   SET capa.cod_01  = d_cod_01
  ,capa.des_01  = d_des_01
  ,capa.ges_01  = d_ges_01
  ,capa.val_01  = d_val_01
  ,capa.cod_02  = d_cod_02
  ,capa.des_02  = d_des_02
  ,capa.ges_02  = d_ges_02
  ,capa.val_02  = d_val_02
  ,capa.cod_03  = d_cod_03
  ,capa.des_03  = d_des_03
  ,capa.ges_03  = d_ges_03
  ,capa.val_03  = d_val_03
  ,capa.cod_04  = d_cod_04
  ,capa.des_04  = d_des_04
  ,capa.ges_04  = d_ges_04
  ,capa.val_04  = d_val_04
  ,capa.cod_05  = d_cod_05
  ,capa.des_05  = d_des_05
  ,capa.ges_05  = d_ges_05
  ,capa.val_05  = d_val_05
  ,capa.cod_06  = d_cod_06
  ,capa.des_06  = d_des_06
  ,capa.ges_06  = d_ges_06
  ,capa.val_06  = d_val_06
  ,capa.cod_07  = d_cod_07
  ,capa.des_07  = d_des_07
  ,capa.ges_07  = d_ges_07
  ,capa.val_07  = d_val_07
  ,capa.cod_08  = d_cod_08
  ,capa.des_08  = d_des_08
  ,capa.ges_08  = d_ges_08
  ,capa.val_08  = d_val_08
  ,capa.cod_09  = d_cod_09
  ,capa.des_09  = d_des_09
  ,capa.ges_09  = d_ges_09
  ,capa.val_09  = d_val_09
  ,capa.cod_10  = d_cod_10
  ,capa.des_10  = d_des_10
  ,capa.ges_10  = d_ges_10
  ,capa.val_10  = d_val_10
  ,capa.cod_11  = d_cod_11
  ,capa.des_11  = d_des_11
  ,capa.ges_11  = d_ges_11
  ,capa.val_11  = d_val_11
  ,capa.cod_12  = d_cod_12
  ,capa.des_12  = d_des_12
  ,capa.ges_12  = d_ges_12
  ,capa.val_12  = d_val_12
  ,capa.cod_13  = d_cod_13
  ,capa.des_13  = d_des_13
  ,capa.ges_13  = d_ges_13
  ,capa.val_13  = d_val_13
  ,capa.cod_14  = d_cod_14
  ,capa.des_14  = d_des_14
  ,capa.ges_14  = d_ges_14
  ,capa.val_14  = d_val_14
  ,capa.cod_15  = d_cod_15
  ,capa.des_15  = d_des_15
  ,capa.ges_15  = d_ges_15
  ,capa.val_15  = d_val_15
  ,capa.cod_16  = d_cod_16
  ,capa.des_16  = d_des_16
  ,capa.ges_16  = d_ges_16
  ,capa.val_16  = d_val_16
  ,capa.cod_17  = d_cod_17
  ,capa.des_17  = d_des_17
  ,capa.ges_17  = d_ges_17
  ,capa.val_17  = d_val_17
  ,capa.cod_18  = d_cod_18
  ,capa.des_18  = d_des_18
  ,capa.ges_18  = d_ges_18
  ,capa.val_18  = d_val_18
  ,capa.cod_19  = d_cod_19
  ,capa.des_19  = d_des_19
  ,capa.ges_19  = d_ges_19
  ,capa.val_19  = d_val_19
  ,capa.cod_20  = d_cod_20
  ,capa.des_20  = d_des_20
  ,capa.ges_20  = d_ges_20
  ,capa.val_20  = d_val_20
 WHERE capa.ROWID = d_rowid
 ;
  END LOOP;
  CLOSE capa;
END;
   PROCEDURE FASE_3 IS
  BEGIN
 INSERT INTO CALCOLO_PROSPETTI_PRESENZA
  (PRENOTAZIONE
  ,TIPO_RECORD
  ,PRPA_SEQUENZA
  ,PRPA_CODICE
  ,PRPA_DESCRIZIONE
  ,SEDE_SEQUENZA
  ,SEDE_CODICE
  ,SEDE_NUMERO
  ,SEDE_DESCRIZIONE
  ,CECO_CODICE
  ,CECO_DESCRIZIONE
  ,GEST_CODICE
  ,GEST_DESCRIZIONE
  ,SETT_CODICE
  ,SETT_NUMERO
  ,SETT_DESCRIZIONE
  ,RAIN_COGNOME
  ,RAIN_NOME
  ,RAIN_CI
  ,PSPA_CONTRATTO
  ,PSPA_DAL_CONTRATTO
  ,PSPA_QUALIFICA
  ,PSPA_DAL_QUALIFICA
  ,PSPA_FIGURA
  ,PSPA_DAL_FIGURA
  ,PSPA_RILEVANZA
  ,PSPA_DAL_PERIODO
  ,PSPA_DAL_RAPPORTO
  ,DAL
  ,AL
  )
 SELECT CAPA.PRENOTAZIONE
  ,'02'
  ,CAPA.PRPA_SEQUENZA
  ,CAPA.PRPA_CODICE
  ,CAPA.PRPA_DESCRIZIONE
  ,CAPA.SEDE_SEQUENZA
  ,CAPA.SEDE_CODICE
  ,CAPA.SEDE_NUMERO
  ,CAPA.SEDE_DESCRIZIONE
  ,CAPA.CECO_CODICE
  ,CAPA.CECO_DESCRIZIONE
  ,CAPA.GEST_CODICE
  ,CAPA.GEST_DESCRIZIONE
  ,CAPA.SETT_CODICE
  ,CAPA.SETT_NUMERO
  ,CAPA.SETT_DESCRIZIONE
  ,CAPA.RAIN_COGNOME
  ,CAPA.RAIN_NOME
  ,CAPA.RAIN_CI
  ,CAPA.PSPA_CONTRATTO
  ,CAPA.PSPA_DAL_CONTRATTO
  ,CAPA.PSPA_QUALIFICA
  ,CAPA.PSPA_DAL_QUALIFICA
  ,CAPA.PSPA_FIGURA
  ,CAPA.PSPA_DAL_FIGURA
  ,CAPA.PSPA_RILEVANZA
  ,CAPA.PSPA_DAL_PERIODO
  ,CAPA.PSPA_DAL_RAPPORTO
  ,CAPA.DAL
  ,CAPA.AL
  FROM CALCOLO_PROSPETTI_PRESENZA CAPA
 WHERE CAPA.PRENOTAZIONE   = w_PRENOTAZIONE
   AND CAPA.DAL   IN
   (SELECT MAX(CAP2.DAL)
  FROM CALCOLO_PROSPETTI_PRESENZA CAP2
 WHERE CAP2.PRPA_CODICE = CAPA.PRPA_CODICE
   AND CAP2.RAIN_CI = CAPA.RAIN_CI
   AND CAP2.PRENOTAZIONE   = w_PRENOTAZIONE
   )
 ;
  END;
-- RICEZIONE PARAMETRI INDICATI
  PROCEDURE SELEZIONA_PARAMETRI IS
  BEGIN
 BEGIN
   SELECT SUBSTR(PARA.VALORE,1,8)
 INTO P_PROSPETTO_INIZ
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = w_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_PROSPETTO_INIZ'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_PROSPETTO_INIZ := NULL;
 END;
 BEGIN
   SELECT SUBSTR(PARA.VALORE,1,8)
 INTO P_PROSPETTO_FINE
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = w_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_PROSPETTO_FINE'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_PROSPETTO_FINE := NULL;
 END;
 BEGIN
   SELECT TO_DATE(PARA.VALORE,'DD/MM/YYYY')
 INTO P_DAL
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = w_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_DAL'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_DAL := to_date(NULL);
 END;
 BEGIN
   SELECT TO_DATE(PARA.VALORE,'DD/MM/YYYY')
 INTO P_AL
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = w_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_AL'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_AL   := TO_DATE(NULL);
 END;
 BEGIN
   SELECT SUBSTR(PARA.VALORE,1,2)
 INTO P_OPZIONE
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = w_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_OPZIONE'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_OPZIONE := 'SC';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,4),'%')
 INTO P_CONTRATTO
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_CONTRATTO'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_CONTRATTO  := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,4),'%')
 INTO P_LIVELLO
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_LIVELLO'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_LIVELLO := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,8),'%')
 INTO P_QUALIFICA
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_QUALIFICA'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_QUALIFICA  := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,2),'%')
 INTO P_DI_RUOLO
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_DI_RUOLO'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_DI_RUOLO   := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,4),'%')
 INTO P_POSIZIONE
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_POSIZIONE'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_POSIZIONE  := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,8),'%')
 INTO P_FIGURA
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_FIGURA'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_FIGURA := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,4),'%')
 INTO P_ATTIVITA
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_ATTIVITA'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_ATTIVITA   := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,4),'%')
 INTO P_GESTIONE
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_GESTIONE'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_GESTIONE   := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,15),'%')
 INTO P_SETTORE
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_SETTORE'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_SETTORE := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,8),'%')
 INTO P_SEDE
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_SEDE'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_SEDE   := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,4),'%')
 INTO P_RUOLO
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_RUOLO'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_RUOLO  := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,4),'%')
 INTO P_RAPPORTO
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_RAPPORTO'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_RAPPORTO   := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,12),'%')
 INTO P_GRUPPO
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_GRUPPO'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_GRUPPO := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,2),'%')
 INTO P_FASCIA
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_FASCIA'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_FASCIA := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,8),'%')
 INTO P_CDC
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_CDC'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_CDC := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,6),'%')
 INTO P_FATTORE
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_FATTORE'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_FATTORE := '%';
 END;
 BEGIN
   SELECT NVL(SUBSTR(PARA.VALORE,1,6),'%')
 INTO P_ASSISTENZA
 FROM A_PARAMETRI PARA
 WHERE PARA.NO_PRENOTAZIONE = W_PRENOTAZIONE
  AND PARA.PARAMETRO   = 'P_ASSISTENZA'
   ;
 EXCEPTION
   WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 P_ASSISTENZA := '%';
 END;
  END;
 -- PULIZIA TABELLA DI LAVORO
  PROCEDURE DELETE_TAB IS
  BEGIN
 DELETE FROM CALCOLO_PROSPETTI_PRESENZA
 WHERE PRENOTAZIONE = W_PRENOTAZIONE;
  END;
-- INSERIMENTO COMBINAZIONE PROSPETTI-PERIODI AVENTI COMPETENZA
  PROCEDURE FASE_1 IS
  BEGIN
 INSERT INTO CALCOLO_PROSPETTI_PRESENZA
  (PRENOTAZIONE
  ,TIPO_RECORD
  ,PRPA_SEQUENZA
  ,PRPA_CODICE
  ,PRPA_DESCRIZIONE
  ,SEDE_NUMERO
  ,CECO_CODICE
  ,GEST_CODICE
  ,SETT_NUMERO
  ,RAIN_COGNOME
  ,RAIN_NOME
  ,RAIN_CI
  ,PSPA_CONTRATTO
  ,PSPA_DAL_CONTRATTO
  ,PSPA_QUALIFICA
  ,PSPA_DAL_QUALIFICA
  ,PSPA_FIGURA
  ,PSPA_DAL_FIGURA
  ,PSPA_RILEVANZA
  ,PSPA_DAL_PERIODO
  ,PSPA_DAL_RAPPORTO
  ,DAL
  ,AL
  )
 SELECT W_PRENOTAZIONE
  ,'01'
  ,PRPA.SEQUENZA
  ,PRPA.CODICE
  ,PRPA.DESCRIZIONE
  ,NVL(EVPA.SEDE,NVL(RAPA.SEDE,PSPA.SEDE))
  ,NVL(EVPA.CDC,NVL(RAPA.CDC,RIFU.CDC))
  ,GEST.CODICE
  ,SETT.NUMERO
  ,RAIN.COGNOME
  ,RAIN.NOME
  ,RAIN.CI
  ,PSPA.CONTRATTO
  ,PSPA.DAL_CONTRATTO
  ,PSPA.QUALIFICA
  ,PSPA.DAL_QUALIFICA
  ,PSPA.FIGURA
  ,PSPA.DAL_FIGURA
  ,PSPA.RILEVANZA
  ,PSPA.DAL_PERIODO
  ,PSPA.DAL_RAPPORTO
  ,MIN(GREATEST(PSPA.DAL,EVPA.DAL))
  ,MAX(LEAST(NVL(PSPA.AL,TO_DATE('3333333','J'))
 ,NVL(EVPA.AL,TO_DATE('3333333','J'))
 )
  )
  FROM RIPARTIZIONI_FUNZIONALI   RIFU
  ,GESTIONI  GEST
  ,SETTORI   SETT
  ,RAPPORTI_PRESENZA RAPA
  ,RAPPORTI_INDIVIDUALI  RAIN
  ,PROSPETTI_PRESENZA PRPA
  ,EVENTI_PRESENZA   EVPA
  ,PERIODI_SERVIZIO_PRESENZA PSPA
 WHERE PRPA.CODICE BETWEEN NVL(P_PROSPETTO_INIZ,' ')
  AND NVL(P_PROSPETTO_FINE,'||||||||')
--  and pspa.ci=100634
   AND PRPA.RILEVANZA   = 'S'
   AND EVPA.DAL <= P_AL
   AND NVL(EVPA.AL,TO_DATE('3333333','J'))
   >=
   NVL(P_DAL,TO_DATE('2222222','J'))
   AND NVL(EVPA.DAL,TO_DATE('2222222','J'))
  BETWEEN
   PSPA.DAL AND NVL(PSPA.AL,TO_DATE('3333333','J'))
   AND EVPA.CI  = PSPA.CI
   AND RIFU.SETTORE = PSPA.SETTORE
   AND RIFU.SEDE = NVL(PSPA.SEDE_CDC,0)
   AND SETT.NUMERO  = PSPA.SETTORE
   AND GEST.CODICE  = SETT.GESTIONE
   AND EVPA.dal BETWEEN rapa.dal AND NVL(rapa.al,TO_DATE('3333333','J'))
   AND EVPA.dal BETWEEN rain.dal AND NVL(rain.al,TO_DATE('3333333','J'))
   AND RAPA.CI  = PSPA.CI
   AND RAPA.DAL = PSPA.DAL_RAPPORTO
   AND RAIN.CI  = PSPA.CI
-- inizio modifica del 22//05/2002
   and evpa.causale in
      (select colonna from righe_prospetto_presenza
        WHERE prospetto BETWEEN NVL(P_PROSPETTO_INIZ,' ') AND NVL(P_PROSPETTO_FINE,'||||||||')
          and tipo = 'CA'
        union
      select distinct causale from totalizzazione_causali
       where categoria in
            (select colonna from righe_prospetto_presenza
              WHERE prospetto BETWEEN NVL(P_PROSPETTO_INIZ,' ') AND NVL(P_PROSPETTO_FINE,'||||||||')
                and tipo = 'CT'
            )
        union
      select distinct causale from ripartizione_causali
       where classe in
            (select colonna from righe_prospetto_presenza
              WHERE prospetto BETWEEN NVL(P_PROSPETTO_INIZ,' ') AND NVL(P_PROSPETTO_FINE,'||||||||')
                and tipo = 'CL'
            )
	  )
-- fine modifica del 22//05/2002
   AND ( RAIN.CC IS NULL
 OR  RAIN.CC IS NOT NULL
 AND EXISTS
 (SELECT 'X'
   FROM A_COMPETENZE COMP
  WHERE COMP.AMBIENTE   = W_AMBIENTE
 AND COMP.ENTE   = W_ENTE
 AND COMP.UTENTE = W_UTENTE
 AND COMP.COMPETENZA = 'CI'
 AND COMP.OGGETTO = RAIN.CC
 )
   )
   AND EXISTS
   (SELECT 'X'
  FROM CLASSI_RAPPORTO   CLRA
 WHERE CLRA.CODICE  = RAIN.RAPPORTO
   AND CLRA.PRESENZA = 'SI'
   )
   AND ( PSPA.UFFICIO   IS NULL
 OR  PSPA.UFFICIO   IS NOT NULL
 AND EXISTS
 (SELECT 'X'
   FROM A_COMPETENZE COMP
  WHERE COMP.AMBIENTE   = W_AMBIENTE
 AND COMP.ENTE   = W_ENTE
 AND COMP.UTENTE = W_UTENTE
 AND COMP.COMPETENZA = PSPA.UFFICIO
 AND COMP.OGGETTO = 'UFFICIO_PRESENZA'
 )
   )
 GROUP BY
   PRPA.SEQUENZA
  ,PRPA.CODICE
  ,PRPA.DESCRIZIONE
  ,NVL(EVPA.SEDE,NVL(RAPA.SEDE,PSPA.SEDE))
  ,NVL(EVPA.CDC,NVL(RAPA.CDC,RIFU.CDC))
  ,GEST.CODICE
  ,SETT.NUMERO
  ,RAIN.COGNOME
  ,RAIN.NOME
  ,RAIN.CI
  ,PSPA.CONTRATTO
  ,PSPA.DAL_CONTRATTO
  ,PSPA.QUALIFICA
  ,PSPA.DAL_QUALIFICA
  ,PSPA.FIGURA
  ,PSPA.DAL_FIGURA
  ,PSPA.RILEVANZA
  ,PSPA.DAL_PERIODO
  ,PSPA.DAL_RAPPORTO
 ;
  END;
-- COMPLETA I DATI DELLE REGISTRAZIONI SELEZIONATE
  PROCEDURE FASE_4 IS
  CURSOR CAPA IS
  SELECT CAPA.SEDE_NUMERO
 ,CAPA.CECO_CODICE
 ,CAPA.GEST_CODICE
 ,CAPA.SETT_NUMERO
 ,CAPA.ROWID
 FROM CALCOLO_PROSPETTI_PRESENZA CAPA
   WHERE CAPA.PRENOTAZIONE = W_PRENOTAZIONE
  ;
  D_SEDE_NUMERO NUMBER(6)   ;
  D_CECO_CODICE   VARCHAR2(8)   ;
  D_GEST_CODICE   VARCHAR2(4)   ;
  D_SETT_NUMERO NUMBER(6)   ;
  D_ROWID VARCHAR2(30)  ;
  D_SEDE_SEQUENZA   NUMBER(6)   ;
  D_SEDE_CODICE   VARCHAR2(8)   ;
  D_SEDE_DESCRIZIONE  VARCHAR2(45)  ;
  D_CECO_DESCRIZIONE  VARCHAR2(30)  ;
  D_GEST_DESCRIZIONE  VARCHAR2(40)  ;
  D_SETT_CODICE   VARCHAR2(15)  ;
  D_SETT_DESCRIZIONE  VARCHAR2(30)  ;
  BEGIN
 BEGIN
  OPEN CAPA;
  LOOP
 FETCH CAPA INTO D_SEDE_NUMERO,D_CECO_CODICE,D_GEST_CODICE,
 D_SETT_NUMERO,D_ROWID;
 EXIT  WHEN CAPA%NOTFOUND;
 BEGIN
  SELECT SEDE.SEQUENZA
 ,SEDE.CODICE
 ,SEDE.DESCRIZIONE
 INTO D_SEDE_SEQUENZA
 ,D_SEDE_CODICE
 ,D_SEDE_DESCRIZIONE
 FROM SEDI SEDE
   WHERE SEDE.NUMERO = D_SEDE_NUMERO
 AND ROWNUM  < 2
  ;
 EXCEPTION
  WHEN NO_DATA_FOUND THEN
 D_SEDE_SEQUENZA := NULL;
 D_SEDE_CODICE  := NULL;
 D_SEDE_DESCRIZIONE := NULL;
 END;
 BEGIN
  SELECT GEST.NOME
 INTO D_GEST_DESCRIZIONE
 FROM GESTIONI GEST
   WHERE GEST.CODICE = D_GEST_CODICE
 AND ROWNUM  < 2
  ;
 EXCEPTION
  WHEN NO_DATA_FOUND THEN
 D_GEST_DESCRIZIONE := NULL;
 END;
 BEGIN
  SELECT CECO.DESCRIZIONE
 INTO D_CECO_DESCRIZIONE
 FROM CENTRI_COSTO CECO
   WHERE CECO.CODICE = D_CECO_CODICE
 AND ROWNUM  < 2
  ;
 EXCEPTION
  WHEN NO_DATA_FOUND THEN
 D_CECO_DESCRIZIONE := NULL;
 END;
 BEGIN
  SELECT SETT.CODICE
 ,SETT.DESCRIZIONE
 INTO D_SETT_CODICE
 ,D_SETT_DESCRIZIONE
 FROM SETTORI SETT
   WHERE SETT.NUMERO = D_SETT_NUMERO
 AND ROWNUM  < 2
  ;
 EXCEPTION
  WHEN NO_DATA_FOUND THEN
 D_SETT_CODICE  := NULL;
 D_SETT_DESCRIZIONE := NULL;
 END;
 UPDATE CALCOLO_PROSPETTI_PRESENZA CAPA
   SET CAPA.SEDE_SEQUENZA  = D_SEDE_SEQUENZA
  ,CAPA.SEDE_CODICE = D_SEDE_CODICE
  ,CAPA.SEDE_DESCRIZIONE   = D_SEDE_DESCRIZIONE
  ,CAPA.CECO_DESCRIZIONE   = D_CECO_DESCRIZIONE
  ,CAPA.GEST_DESCRIZIONE   = D_GEST_DESCRIZIONE
  ,CAPA.SETT_CODICE = D_SETT_CODICE
  ,CAPA.SETT_DESCRIZIONE   = D_SETT_DESCRIZIONE
 WHERE CAPA.ROWID  = D_ROWID
 ;
  END LOOP;
  CLOSE CAPA;
 END;
  END;
PROCEDURE CALCOLO IS
  BEGIN
 IF P_AL IS NULL THEN
 BEGIN
  SELECT RIPA.FIN_MES
 INTO P_AL
 FROM RIFERIMENTO_PRESENZA RIPA
   WHERE RIPA.RIPA_ID = 'RIPA'
 AND ROWNUM   < 2
  ;
 EXCEPTION
  WHEN NO_DATA_FOUND THEN
 P_AL := TO_DATE(TO_CHAR(SYSDATE,'DDMMYYYY'),'DDMMYYYY');
 END;
 END IF;
 BEGIN
 DELETE_TAB;
 FASE_1;
  -- FASE_2;
 FASE_3;
 FASE_4;
 FASE_5;
 FASE_6;
 COMMIT;
 END;
  END;
 -- DETERMINAZIONE VALORE COLONNE DEL PROSPETTO
  PROCEDURE CALCOLO_VALORE (
  P_CI   IN NUMBER,
  P_TIPO IN VARCHAR2,
  P_CODICE   IN VARCHAR2,
  P_TIPO_RECORD  IN VARCHAR2,
  P_STAMPA   IN VARCHAR2,
  P_SEDE IN NUMBER,
  P_CDC  IN VARCHAR2,
  P_GEST IN VARCHAR2,
  P_SETTORE  IN NUMBER,
  P_DESCRIZIONE  IN OUT VARCHAR2,
  P_GESTIONE IN OUT VARCHAR2,
  P_VALORE   IN OUT NUMBER
   ) IS
  D_CI NUMBER(8)   ;
  D_TIPO VARCHAR2(2)   ;
  D_CODICE   VARCHAR2(8)   ;
  D_DESCRIZIONE  VARCHAR2(8)   ;
  D_GESTIONE VARCHAR2(1)   ;
  D_VALORE NUMBER  ;
  D_TIPO_REC VARCHAR2(2)   ;
  D_STAMPA   VARCHAR2(1)   ;
  D_SEDE   NUMBER(6)   ;
  D_CDC  VARCHAR2(8)   ;
  D_GEST VARCHAR2(4)   ;
  D_SETTORE NUMBER(6)   ;
  BEGIN
  D_CI  := P_CI;
  D_TIPO := P_TIPO;
  D_CODICE  := P_CODICE;
  D_TIPO_REC := P_TIPO_RECORD;
  D_STAMPA  := P_STAMPA;
  D_SEDE := P_SEDE;
  D_CDC := P_CDC;
  D_GEST := P_GEST;
  D_SETTORE := P_SETTORE;
  BEGIN
 IF   D_TIPO = 'CT' THEN
 SELECT  CTEV.GESTIONE
 ,D_CODICE
   INTO  D_GESTIONE
 ,D_DESCRIZIONE
   FROM  CATEGORIE_EVENTO CTEV
  WHERE  CTEV.CODICE  = D_CODICE
 ;
 ELSIF
 D_TIPO = 'CL' THEN
 SELECT  CLEV.GESTIONE
 ,D_CODICE
   INTO  D_GESTIONE
 ,D_DESCRIZIONE
   FROM  CLASSI_EVENTO CLEV
  WHERE  CLEV.CODICE  = D_CODICE
 ;
 ELSE
 SELECT  CAEV.GESTIONE
 ,CAEV.DES_ABB
   INTO  D_GESTIONE
 ,D_DESCRIZIONE
   FROM  CAUSALI_EVENTO CAEV
  WHERE  CAEV.CODICE  = D_CODICE
 ;
 END IF;
  EXCEPTION
 WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
  D_DESCRIZIONE := D_CODICE;
  D_GESTIONE := 'N';
  END;
  IF   D_TIPO_REC = '01'
  AND  NVL(D_STAMPA,'N') = 'R'
  OR   D_TIPO_REC = '02'
  AND  NVL(D_STAMPA,'N') = 'N'   THEN
   D_VALORE := 0;
  ELSE
  IF   D_TIPO = 'CT' THEN
   SELECT SUM(DECODE(TOCA.GESTIONE
                    ,'G',NVL(EVPA.AL,TO_DATE('3333333','J'))
                             - EVPA.DAL + 1
                            ,EVPA.VALORE
 ) * DECODE(TOCA.SEGNO,'-',-1,1)
   * DECODE(CTEV.GESTIONE||CAEV.GESTIONE
   ,'HG',NVL(PSPA.MIN_GG,0)
   ,'OG',NVL(PSPA.MIN_GG,0)
 ,1
   )
   / DECODE(CTEV.GESTIONE||CAEV.GESTIONE
   ,'GH',decode(NVL(PSPA.MIN_GG,1),0,1,NVL(PSPA.MIN_GG,1))
   ,'GO',decode(NVL(PSPA.MIN_GG,1),0,1,NVL(PSPA.MIN_GG,1))
 ,1
   )
 )
 INTO D_VALORE
 FROM CAUSALI_EVENTO CAEV
 ,CATEGORIE_EVENTO  CTEV
 ,SEDI  SEDR
 ,SEDI  SEDE
 ,EVENTI_PRESENZA   EVPA
 ,MESI  MESE
 ,SETTORI   SETT
 ,RIPARTIZIONI_FUNZIONALI   RIFU
 ,RAPPORTI_PRESENZA RAPA
 ,TOTALIZZAZIONE_CAUSALI TOCA
 ,PERIODI_SERVIZIO_PRESENZA PSPA
 WHERE EVPA.CI = PSPA.CI
  AND RAPA.CI = PSPA.CI
  AND RAPA.DAL = PSPA.DAL_RAPPORTO
  AND EVPA.DAL  BETWEEN RAPA.DAL
  AND NVL(RAPA.AL ,TO_DATE('3333333','J'))
  AND PSPA.CI = D_CI
  AND MESE.ANNO = TO_NUMBER(TO_CHAR(P_AL,'YYYY'))
  AND MESE.MESE = TO_NUMBER(TO_CHAR(P_AL,'MM'))
  AND SETT.NUMERO = PSPA.SETTORE
  AND TOCA.CATEGORIA  = D_CODICE
  AND RIFU.SEDE   (+) = PSPA.SEDE_CDC
  AND RIFU.SETTORE (+) = PSPA.SETTORE
  AND CAEV.CODICE = EVPA.CAUSALE
  AND CTEV.CODICE = TOCA.CATEGORIA
  AND EVPA.CAUSALE = TOCA.CAUSALE
  AND NVL(EVPA.MOTIVO,' ')
   LIKE TOCA.MOTIVO
  AND EVPA.DAL  BETWEEN PSPA.DAL
 AND NVL(PSPA.AL ,TO_DATE('3333333','J'))
  AND EVPA.RIFERIMENTO
 BETWEEN NVL(CTEV.DAL,TO_DATE('2222222','J'))
 AND NVL(CTEV.AL ,TO_DATE('3333333','J'))
  AND (MESE.FIN_MESE - EVPA.DAL + 1)
 <= DECODE(TO_CHAR(TOCA.RIFERIMENTO_MM)||
   TO_CHAR(TOCA.RIFERIMENTO_GG)
  ,NULL,9999
  ,NVL(TOCA.RIFERIMENTO_MM,0)
   * 30 +
   NVL(TOCA.RIFERIMENTO_GG,0)
  )
  AND EVPA.DAL   <= MESE.FIN_MESE
  AND SEDR.NUMERO (+)  = PSPA.SEDE
  AND SEDE.NUMERO (+)  = EVPA.SEDE
  AND NVL(SEDE.CODICE,NVL(SEDR.CODICE,' '))
   LIKE CTEV.SEDE
  AND NVL(EVPA.CDC,NVL(RAPA.CDC,NVL(RIFU.CDC,' ')))
   LIKE CTEV.CDC
  AND DECODE(CTEV.OPZIONE
 ,'M',TO_CHAR(ADD_MONTHS(EVPA.DAL
   ,DECODE(CAEV.RIFERIMENTO
  ,'P',1,0
  )
   ),'YYYYMM'
 )
 ,'A',TO_CHAR(ADD_MONTHS(EVPA.DAL
   ,DECODE(CAEV.RIFERIMENTO
  ,'P',1,0
  )
   ),'YYYY'
 )
 ,'T',TO_CHAR(MESE.FIN_MESE,'YYYY')
 ,'P',TO_CHAR(ADD_MONTHS(EVPA.DAL
   ,DECODE(CAEV.RIFERIMENTO
  ,'P',1,0
  )
   ),'YYYY'
 )
 ,NULL
 ) =
  DECODE(CTEV.OPZIONE
 ,'M',TO_CHAR(MESE.FIN_MESE,'YYYYMM')
 ,'A',TO_CHAR(MESE.FIN_MESE,'YYYY')
 ,'T',TO_CHAR(MESE.FIN_MESE,'YYYY')
 ,'P',TO_CHAR(TO_NUMBER(TO_CHAR(MESE.FIN_MESE,'YYYY'))
 -1)
 ,NULL
 )
  AND  ( NVL(EVPA.SEDE,NVL(RAPA.SEDE,NVL(PSPA.SEDE,0)))
 = NVL(D_SEDE,0)
 AND  NVL(EVPA.CDC,NVL(RAPA.CDC,NVL(RIFU.CDC,' ')))
 = NVL(D_CDC,' ')
 AND  NVL(SETT.GESTIONE,' ')
 = NVL(D_GEST,' ')
 AND  NVL(PSPA.SETTORE,0)
 = NVL(D_SETTORE,0)
 AND  P_TIPO_RECORD  = '01'
 OR   P_TIPO_RECORD  = '02'
   )
  ;
  ELSIF
   D_TIPO = 'CL' THEN
   SELECT  SUM(VALORE *
   DECODE(CLEV.GESTIONE||CAEV.GESTIONE
 ,'HG',NVL(PSPA.MIN_GG,0)
 ,'OG',NVL(PSPA.MIN_GG,0)
  ,1
 ) /
   DECODE(CLEV.GESTIONE||CAEV.GESTIONE
 ,'GH',decode(NVL(PSPA.MIN_GG,1),0,1,NVL(PSPA.MIN_GG,1))
 ,'GO',decode(NVL(PSPA.MIN_GG,1),0,1,NVL(PSPA.MIN_GG,1))
  ,1
 )
  )
 INTO  D_VALORE
 FROM  CAUSALI_EVENTO CAEV
  ,RIPARTIZIONE_CAUSALI  RICA
  ,RIPARTIZIONI_FUNZIONALI   RIFU
  ,SETTORI   SETT
  ,CLASSI_EVENTO CLEV
  ,RAPPORTI_PRESENZA RAPA
  ,EVENTI_PRESENZA   EVPA
  ,PERIODI_SERVIZIO_PRESENZA PSPA
 WHERE  NVL(EVPA.DAL  ,TO_DATE('2222222','J'))
   <=
   NVL(P_AL ,TO_DATE('3333333','J'))
  AND  NVL(EVPA.AL   ,TO_DATE('3333333','J'))
   >=
   NVL(p_DAL,TO_DATE('2222222','J'))
  AND  NVL(EVPA.DAL  ,TO_DATE('2222222','J'))
  BETWEEN
   PSPA.DAL
  AND
   NVL(PSPA.AL   ,TO_DATE('3333333','J'))
  AND  RICA.CLASSE  = D_CODICE
  AND  RICA.CAUSALE = EVPA.CAUSALE
  AND  PSPA.CI  = D_CI
  AND  RAPA.CI  = D_CI
  AND EVPA.DAL  BETWEEN RAPA.DAL
  AND NVL(RAPA.AL ,TO_DATE('3333333','J'))
  AND  EVPA.CI  = D_CI
  AND  CLEV.CODICE  = D_CODICE
  AND  CAEV.CODICE  = EVPA.CAUSALE
  AND  SETT.NUMERO  = PSPA.SETTORE
  AND  RIFU.SETTORE = PSPA.SETTORE
  AND  RIFU.SEDE = NVL(PSPA.SEDE_CDC,0)
  AND  ( NVL(EVPA.SEDE,NVL(RAPA.SEDE,NVL(PSPA.SEDE,0)))
 = NVL(D_SEDE,0)
 AND  NVL(EVPA.CDC,NVL(RAPA.CDC,NVL(RIFU.CDC,' ')))
 = NVL(D_CDC,' ')
 AND  NVL(SETT.GESTIONE,' ')
 = NVL(D_GEST,' ')
 AND  NVL(PSPA.SETTORE,0)
 = NVL(D_SETTORE,0)
 AND  P_TIPO_RECORD  = '01'
 OR   P_TIPO_RECORD  = '02'
   )
   ;
  ELSE
   SELECT  SUM(EVPA.VALORE)
 INTO  D_VALORE
 FROM  CAUSALI_EVENTO CAEV
  ,RIPARTIZIONI_FUNZIONALI   RIFU
  ,SETTORI   SETT
  ,RAPPORTI_PRESENZA RAPA
  ,EVENTI_PRESENZA   EVPA
  ,PERIODI_SERVIZIO_PRESENZA PSPA
 WHERE  NVL(EVPA.DAL  ,TO_DATE('2222222','J'))
   <=
   NVL(P_AL ,TO_DATE('3333333','J'))
  AND  NVL(EVPA.AL   ,TO_DATE('3333333','J'))
   >=
   NVL(P_DAL,TO_DATE('2222222','J'))
  AND  NVL(EVPA.DAL  ,TO_DATE('2222222','J'))
  BETWEEN
   PSPA.DAL
  AND
   NVL(PSPA.AL   ,TO_DATE('3333333','J'))
  AND  EVPA.CAUSALE = D_CODICE
  AND  PSPA.CI  = D_CI
  AND  RAPA.CI  = D_CI
  AND EVPA.DAL  BETWEEN RAPA.DAL
  AND NVL(RAPA.AL ,TO_DATE('3333333','J'))
  AND  EVPA.CI  = D_CI
  AND  CAEV.CODICE  = D_CODICE
  AND  SETT.NUMERO  = PSPA.SETTORE
  AND  RIFU.SETTORE = PSPA.SETTORE
  AND  RIFU.SEDE = NVL(PSPA.SEDE_CDC,0)
  AND  ( NVL(EVPA.SEDE,NVL(RAPA.SEDE,NVL(PSPA.SEDE,0)))
 = NVL(D_SEDE,0)
 AND  NVL(EVPA.CDC,NVL(RAPA.CDC,NVL(RIFU.CDC,' ')))
 = NVL(D_CDC,' ')
 AND  NVL(SETT.GESTIONE,' ')
 = NVL(D_GEST,' ')
 AND  NVL(PSPA.SETTORE,0)
 = NVL(D_SETTORE,0)
 AND  P_TIPO_RECORD  = '01'
 OR   P_TIPO_RECORD  = '02'
   )
   ;
  END IF;
  END IF;
  IF  D_VALORE IS NULL THEN
  D_VALORE := 0;
  END IF;
 P_GESTIONE := D_GESTIONE;
 P_DESCRIZIONE  := D_DESCRIZIONE;
 P_VALORE   := D_VALORE;
  END;
  PROCEDURE MAIN      (P_PRENOTAZIONE IN NUMBER,
                  PASSO IN NUMBER) IS
  BEGIN
IF P_PRENOTAZIONE != 0 THEN
  BEGIN  -- PRELEVA UTENTE DA DEPOSITARE IN CAMPI GLOBAL
 SELECT UTENTE
  , AMBIENTE
  , ENTE
  , GRUPPO_LING
   INTO W_UTENTE
  , W_AMBIENTE
  , W_ENTE
  , W_LINGUA
   FROM A_PRENOTAZIONI
  WHERE NO_PRENOTAZIONE = P_PRENOTAZIONE
 ;
  EXCEPTION
 WHEN OTHERS THEN NULL;
  END;
   END IF;
   W_PRENOTAZIONE := P_PRENOTAZIONE;
   ERRORE := TO_CHAR(NULL);
   -- MEMORIZZATO IN CASO DI AZZERAMENTO PER ROLLBACK
   SELEZIONA_PARAMETRI;
   -- VIENE RIAZZERATO IN FORM CHIAMANTE PER EVITARE TRASACTION COMPLETED
   CALCOLO;  -- ESECUZIONE DEL CALCOLO
   IF W_PRENOTAZIONE != 0 THEN
  IF SUBSTR(errore,6,1) = '8' THEN
 UPDATE A_PRENOTAZIONI
 SET ERRORE = 'P05808'
  WHERE NO_PRENOTAZIONE = w_PRENOTAZIONE
 ;
 COMMIT;
  ELSIF
 SUBSTR(errore,6,1) = '9' THEN
 UPDATE A_PRENOTAZIONI
 SET ERRORE   = 'P05809'
  , PROSSIMO_PASSO = 91
  WHERE NO_PRENOTAZIONE = w_PRENOTAZIONE
 ;
 COMMIT;
  END IF;
   END IF;
/*
 EXCEPTION
   WHEN OTHERS THEN NULL;
  BEGIN
 ROLLBACK;
 IF W_PRENOTAZIONE != 0 THEN
 UPDATE A_PRENOTAZIONI
   SET ERRORE   = '*ABORT*'
 , PROSSIMO_PASSO = 99
 WHERE NO_PRENOTAZIONE = W_PRENOTAZIONE
 ;
 COMMIT;
 END IF;
  EXCEPTION
 WHEN OTHERS THEN
         NULL;
  END;
*/
 END;
END;
/

