CREATE OR REPLACE PACKAGE ppocsidp IS
/******************************************************************************
 NOME:          PPOCSIDP
 DESCRIZIONE:   
 ARGOMENTI:   
 RITORNA:     

 ECCEZIONI:   

 ANNOTAZIONI:  

 REVISIONI:
 Rev. Data       Autore Descrizione
 ---- ---------- ------ --------------------------------------------------------
 1    30/06/2000
 1.1  03/07/2006 CB     Modifica campo evento - attività 14612
******************************************************************************/

FUNCTION  VERSIONE              RETURN VARCHAR2;
   PROCEDURE MAIN		(PRENOTAZIONE IN NUMBER,
		  			 PASSO IN NUMBER);
END;
/

CREATE OR REPLACE PACKAGE BODY ppocsidp IS
form_trigger_failure exception;
W_UTENTE	VARCHAR2(10);
W_AMBIENTE	VARCHAR2(10);
W_ENTE		VARCHAR2(10);
W_LINGUA	VARCHAR2(1);
W_PRENOTAZIONE	NUMBER(10);
w_voce_menu	varchar2(8);
errore		varchar2(6);
P_D_F		VARCHAR2(1);
P_DAL		DATE;
P_AL		DATE;
P_EVENTO	VARCHAR2(6);
P_POSIZIONE	VARCHAR2(4);
P_OPZIONE	VARCHAR2(1);
p_lingue	VARCHAR2(3);
 FUNCTION VERSIONE  RETURN VARCHAR2 IS
 BEGIN
    RETURN 'V1.1 del 03/07/2006';
 END VERSIONE;
PROCEDURE DEL_DETT_POSTI IS
d_errtext VARCHAR2(240);
d_prenotazione number(6);
BEGIN
   delete from calcolo_dotazione
    where cado_prenotazione    = w_prenotazione
      and cado_rilevanza       < 6
   ;
EXCEPTION
  WHEN OTHERS THEN
    d_errtext := substr(SQLERRM,1,240);
    d_prenotazione := w_prenotazione;
    ROLLBACK;
    insert into errori_pogm (prenotazione,voce_menu,data,errore)
    values (d_prenotazione,W_VOCE_MENU ,sysdate,d_errtext)
    ;
    COMMIT;
    RAISE FORM_TRIGGER_FAILURE;
END;
    -- PULIZIA TABELLA DI LAVORO
PROCEDURE DELETE_TAB IS
D_ERRTEXT VARCHAR2(240);
D_PRENOTAZIONE NUMBER(6);
BEGIN
	DELETE FROM CALCOLO_DOTAZIONE
	WHERE CADO_PRENOTAZIONE = W_PRENOTAZIONE;
	DELETE FROM CALCOLO_NOMINATIVO_DOTAZIONE
	WHERE CNDO_PRENOTAZIONE = W_PRENOTAZIONE;
EXCEPTION WHEN OTHERS THEN
	D_ERRTEXT := SUBSTR(SQLERRM,1,240);
	D_PRENOTAZIONE := W_PRENOTAZIONE;
	ROLLBACK;
	INSERT INTO ERRORI_POGM (PRENOTAZIONE,VOCE_MENU,DATA,ERRORE)
	VALUES (D_PRENOTAZIONE,W_VOCE_MENU ,SYSDATE,D_ERRTEXT);
	COMMIT;
	RAISE FORM_TRIGGER_FAILURE;
END;
-- DETERMINA LA SEQUENZA DEI GRUPPI LINGUISTICI
PROCEDURE SEQ_LINGUA IS
D_LINGUA_1     VARCHAR2(1);
D_LINGUA_2     VARCHAR2(1);
D_LINGUA_3     VARCHAR2(1);
D_LINGUA       VARCHAR2(1);
D_CONTA NUMBER(2);
CURSOR  GRUPPI_LING IS
	SELECT GRUPPO_AL
	FROM GRUPPI_LINGUISTICI
	WHERE GRUPPO  = W_LINGUA
	AND ROWNUM  < 4
	ORDER BY SEQUENZA,GRUPPO_AL;
BEGIN
       IF W_LINGUA != '*' THEN
OPEN GRUPPI_LING;
D_CONTA     := 1;
D_LINGUA_1  := '?';
D_LINGUA_2  := '?';
D_LINGUA_3  := '?';
LOOP
  FETCH GRUPPI_LING INTO D_LINGUA;
  EXIT WHEN GRUPPI_LING%NOTFOUND;
  IF D_CONTA = 1 THEN
     D_LINGUA_1 := D_LINGUA;
  ELSIF
     D_CONTA = 2 THEN
     D_LINGUA_2 := D_LINGUA;
  ELSE
     D_LINGUA_3 := D_LINGUA;
  END IF;
  IF D_CONTA = 3 THEN
     EXIT;
  END IF;
  D_CONTA := D_CONTA + 1;
END LOOP;
CLOSE GRUPPI_LING;
       ELSE
D_LINGUA_1 := 'I';
D_LINGUA_2 := '?';
D_LINGUA_3 := '?';
       END IF;
       P_LINGUE := D_LINGUA_1||D_LINGUA_2||D_LINGUA_3;
      END;
PROCEDURE CC_DOTAZIONE IS
D_ERRTEXT       VARCHAR2(240);
D_PRENOTAZIONE   NUMBER(6);
      D_CONTA_CURSORE  NUMBER(2);
      D_RIOR_DATA DATE;
      D_FIN_MES  DATE;
      D_RILEVANZA      NUMBER(1);
      D_POPI_SEDE_POSTO       VARCHAR2(2);
      D_POPI_ANNO_POSTO NUMBER(4);
      D_POPI_NUMERO_POSTO      NUMBER(7);
      D_POPI_POSTO     NUMBER(5);
      D_POPI_DAL DATE;
      D_POPI_STATO    VARCHAR2(1);
      D_POPI_SITUAZIONE       VARCHAR2(1);
      D_POPI_RICOPRIBILE      VARCHAR2(1);
      D_POPI_GRUPPO   VARCHAR2(12);
      D_POPI_PIANTA    NUMBER(6);
      D_SETP_SEQUENZA  NUMBER(6);
      D_SETP_CODICE   VARCHAR2(15);
      D_POPI_SETTORE   NUMBER(6);
      D_SETT_SEQUENZA  NUMBER(6);
      D_SETT_CODICE   VARCHAR2(15);
      D_SETT_SUDDIVISIONE      NUMBER(1);
      D_SETT_SETTORE_G NUMBER(6);
      D_SETG_SEQUENZA  NUMBER(6);
      D_SETG_CODICE   VARCHAR2(15);
      D_SETT_SETTORE_A NUMBER(6);
      D_SETA_SEQUENZA  NUMBER(6);
      D_SETA_CODICE   VARCHAR2(15);
      D_SETT_SETTORE_B NUMBER(6);
      D_SETB_SEQUENZA  NUMBER(6);
      D_SETB_CODICE   VARCHAR2(15);
      D_SETT_SETTORE_C NUMBER(6);
      D_SETC_SEQUENZA  NUMBER(6);
      D_SETC_CODICE   VARCHAR2(15);
      D_SETT_GESTIONE VARCHAR2(4);
      D_GEST_PROSPETTO_PO     VARCHAR2(1);
      D_GEST_SINTETICO_PO     VARCHAR2(1);
      D_SETT_SEDE      NUMBER(6);
      D_SEDI_CODICE   VARCHAR2(8);
      D_SEDI_SEQUENZA  NUMBER(6);
      D_POPI_FIGURA    NUMBER(6);
      D_FIGI_DAL DATE;
      D_FIGU_SEQUENZA  NUMBER(6);
      D_FIGI_CODICE   VARCHAR2(8);
      D_FIGI_QUALIFICA NUMBER(6);
      D_QUGI_DAL DATE;
      D_QUAL_SEQUENZA  NUMBER(6);
      D_QUGI_CODICE   VARCHAR2(8);
      D_QUGI_CONTRATTO VARCHAR2(4);
      D_COST_DAL DATE;
      D_CONT_SEQUENZA  NUMBER(3);
      D_COST_ORE_LAVORO NUMBER(5,2);
      D_QUGI_LIVELLO  VARCHAR2(4);
      D_FIGI_PROFILO  VARCHAR2(4);
      D_PRPR_SEQUENZA  NUMBER(3);
      D_PRPR_SUDDIVISIONE_PO  VARCHAR2(1);
      D_FIGI_POSIZIONE VARCHAR2(4);
      D_POFU_SEQUENZA  NUMBER(3);
      D_QUGI_RUOLO    VARCHAR2(4);
      D_RUOL_SEQUENZA  NUMBER(4);
      D_POPI_ATTIVITA VARCHAR2(4);
      D_ATTI_SEQUENZA  NUMBER(6);
      D_POPI_ORE       NUMBER(5,2);
      D_PEGI_POSIZIONE VARCHAR2(4);
      D_POSI_SEQUENZA  NUMBER(3);
      D_POSI_DI_RUOLO  NUMBER(1);
      D_PEGI_TIPO_RAPPORTO    VARCHAR2(2);
      D_PEGI_ORE       NUMBER(5,2);
      D_PEGI_SEDE_DEL VARCHAR2(2);
      D_PEGI_ANNO_DEL  NUMBER(4);
      D_PEGI_NUMERO_DEL NUMBER(7);
      D_PEGI_EVENTO   VARCHAR2(6);
      D_EVGI_SEQUENZA  NUMBER(3);
      D_PEGI_CI NUMBER(8);
      D_PEGI_RILEVANZA VARCHAR2(1);
      D_PEGI_DAL    DATE;
      D_PEGI_AL     DATE;
      D_CADO_ORE_PREVISTI      NUMBER(5,2);
      D_CADO_INIZIALE  NUMBER(5);
      D_CADO_ASSUNZIONI NUMBER(5);
      D_CADO_CESSAZIONI NUMBER(5);
      D_CADO_ACQUISIZIONI      NUMBER(5);
      D_CADO_RILASCI   NUMBER(5);
      D_NUMERO NUMBER(5);
      CURSOR PRESENZE IS
      SELECT 1
    ,PG.ORE
    ,PG.POSIZIONE
    ,NVL(PO.SEQUENZA,999)
    ,PG.TIPO_RAPPORTO
    ,PG.FIGURA
    ,PG.QUALIFICA
    ,PG.ATTIVITA
    ,PG.SETTORE
    ,PG.SEDE
    ,PG.EVENTO
    ,NVL(EG.SEQUENZA,999)
    ,PG.SEDE_DEL
    ,PG.ANNO_DEL
    ,PG.NUMERO_DEL
    ,PG.SEDE_POSTO
    ,PG.ANNO_POSTO
    ,PG.NUMERO_POSTO
    ,PG.POSTO
    ,PG.CI
    ,PG.RILEVANZA
    ,PG.DAL
    ,PG.AL
    ,NVL(PG.AL,TO_DATE('3333333','J'))
FROM POSIZIONI PA
    ,POSIZIONI PO
    ,EVENTI_GIURIDICI  EG
    ,PERIODI_GIURIDICI PG
       WHERE PG.DAL <= P_AL
 AND NVL(PG.AL,TO_DATE('3333333','J'))
    >= P_DAL
 AND (    PG.RILEVANZA      IN ('Q','I')
      AND P_D_F   = 'D'
      OR  PG.RILEVANZA      IN ('S','E')
      AND P_D_F   = 'F'
     )
 AND PG.EVENTO    LIKE P_EVENTO
 AND PG.POSIZIONE LIKE P_POSIZIONE
 AND PA.CODICE       = PG.POSIZIONE
 AND PO.CODICE       = PA.POSIZIONE
 AND EG.CODICE       = PG.EVENTO
      ;
      BEGIN
BEGIN
   SELECT DATA
     INTO D_FIN_MES
     FROM RIFERIMENTO_ORGANICO
   ;
END;
D_CONTA_CURSORE := 0;
LOOP
D_CONTA_CURSORE := D_CONTA_CURSORE + 1;
IF D_CONTA_CURSORE > 1 THEN
   EXIT;
END IF;
IF D_CONTA_CURSORE = 1 THEN
   OPEN PRESENZE;
END IF;
LOOP
  IF D_CONTA_CURSORE = 1 THEN
     FETCH PRESENZE      INTO D_RILEVANZA,D_PEGI_ORE,
 D_PEGI_POSIZIONE,D_POSI_SEQUENZA,
 D_PEGI_TIPO_RAPPORTO,
 D_POPI_FIGURA,D_FIGI_QUALIFICA,
 D_POPI_ATTIVITA,D_POPI_SETTORE,D_SETT_SEDE,
 D_PEGI_EVENTO,D_EVGI_SEQUENZA,
 D_PEGI_SEDE_DEL,D_PEGI_ANNO_DEL,
 D_PEGI_NUMERO_DEL,
 D_POPI_SEDE_POSTO,D_POPI_ANNO_POSTO,
 D_POPI_NUMERO_POSTO,D_POPI_POSTO,
 D_PEGI_CI,D_PEGI_RILEVANZA,
 D_PEGI_DAL,D_PEGI_AL,D_RIOR_DATA;
     EXIT  WHEN PRESENZE%NOTFOUND;
  END IF;
  D_CADO_INIZIALE:= 0;
  D_CADO_ASSUNZIONI      := 0;
  D_CADO_CESSAZIONI      := 0;
  D_CADO_ACQUISIZIONI    := 0;
  D_CADO_RILASCI := 0;
  D_POPI_DAL     := NULL;
  D_POPI_STATO   := NULL;
  D_POPI_SITUAZIONE      := NULL;
  D_POPI_RICOPRIBILE     := NULL;
  D_POPI_GRUPPO  := NULL;
  D_POPI_ORE     := NULL;
  D_POPI_PIANTA  := NULL;
  D_SETP_CODICE  := NULL;
  D_SETP_SEQUENZA:= NULL;
  D_CADO_ORE_PREVISTI    := NULL;
      --
  SELECT LEAST(D_RIOR_DATA,D_FIN_MES)
    INTO D_RIOR_DATA
    FROM DUAL
  ;
      --
  IF  D_POPI_SEDE_POSTO     IS NOT NULL
  AND D_POPI_ANNO_POSTO     IS NOT NULL
  AND D_POPI_NUMERO_POSTO   IS NOT NULL
  AND D_POPI_POSTO  IS NOT NULL THEN
     BEGIN
SELECT DAL
      ,STATO
      ,SITUAZIONE
      ,DISPONIBILITA
      ,GRUPPO
      ,PIANTA
      ,ORE
  INTO D_POPI_DAL
      ,D_POPI_STATO
      ,D_POPI_SITUAZIONE
      ,D_POPI_RICOPRIBILE
      ,D_POPI_GRUPPO
      ,D_POPI_PIANTA
      ,D_POPI_ORE
  FROM POSTI_PIANTA
 WHERE SEDE_POSTO= D_POPI_SEDE_POSTO
   AND ANNO_POSTO= D_POPI_ANNO_POSTO
   AND NUMERO_POSTO      = D_POPI_NUMERO_POSTO
   AND POSTO     = D_POPI_POSTO
   AND D_RIOR_DATA BETWEEN DAL
   AND NVL(AL,TO_DATE('3333333','J'))
;
     END;
     BEGIN
SELECT NVL(SEQUENZA,999999),CODICE
  INTO D_SETP_SEQUENZA,D_SETP_CODICE
  FROM SETTORI
 WHERE NUMERO = D_POPI_PIANTA
;
     END;
  END IF;
  BEGIN
     SELECT NVL(S.SEQUENZA,999999),S.CODICE,S.SUDDIVISIONE,S.GESTIONE,
    G.PROSPETTO_PO,NVL(G.SINTETICO_PO,G.PROSPETTO_PO),
    S.SETTORE_G,S.SETTORE_A,
    S.SETTORE_B,S.SETTORE_C,G.SINTETICO_PO
       INTO D_SETT_SEQUENZA,D_SETT_CODICE,D_SETT_SUDDIVISIONE,
    D_SETT_GESTIONE,D_GEST_PROSPETTO_PO,D_GEST_SINTETICO_PO,
    D_SETT_SETTORE_G,D_SETT_SETTORE_A,
    D_SETT_SETTORE_B,D_SETT_SETTORE_C,D_GEST_SINTETICO_PO
       FROM GESTIONI G,SETTORI S
      WHERE S.NUMERO    = D_POPI_SETTORE
AND G.CODICE    = S.GESTIONE
     ;
  END;
  IF D_SETT_SUDDIVISIONE = 0 THEN
     D_SETT_SETTORE_G   := D_POPI_SETTORE;
     D_SETG_SEQUENZA    := D_SETT_SEQUENZA;
     D_SETG_CODICE      := D_SETT_CODICE;
     D_SETT_SETTORE_A   := D_POPI_SETTORE;
     D_SETA_SEQUENZA    := 0;
     D_SETA_CODICE      := D_SETT_CODICE;
     D_SETT_SETTORE_B   := D_POPI_SETTORE;
     D_SETB_SEQUENZA    := 0;
     D_SETB_CODICE      := D_SETT_CODICE;
     D_SETT_SETTORE_C   := D_POPI_SETTORE;
     D_SETC_SEQUENZA    := 0;
     D_SETC_CODICE      := D_SETT_CODICE;
  ELSE
     BEGIN
       SELECT NVL(SEQUENZA,999999),CODICE
 INTO D_SETG_SEQUENZA,D_SETG_CODICE
 FROM SETTORI
WHERE NUMERO = D_SETT_SETTORE_G
       ;
     END;
     IF D_SETT_SUDDIVISIONE = 1 THEN
D_SETT_SETTORE_A   := D_POPI_SETTORE;
D_SETA_SEQUENZA    := D_SETT_SEQUENZA;
D_SETA_CODICE      := D_SETT_CODICE;
D_SETT_SETTORE_B   := D_POPI_SETTORE;
D_SETB_SEQUENZA    := 0;
D_SETB_CODICE      := D_SETT_CODICE;
D_SETT_SETTORE_C   := D_POPI_SETTORE;
D_SETC_SEQUENZA    := 0;
D_SETC_CODICE      := D_SETT_CODICE;
     ELSE
BEGIN
  SELECT NVL(SEQUENZA,999999),CODICE
    INTO D_SETA_SEQUENZA,D_SETA_CODICE
    FROM SETTORI
   WHERE NUMERO = D_SETT_SETTORE_A
  ;
END;
IF D_SETT_SUDDIVISIONE = 2 THEN
   D_SETT_SETTORE_B   := D_POPI_SETTORE;
   D_SETB_SEQUENZA    := D_SETT_SEQUENZA;
   D_SETB_CODICE      := D_SETT_CODICE;
   D_SETT_SETTORE_C   := D_POPI_SETTORE;
   D_SETC_SEQUENZA    := 0;
   D_SETC_CODICE      := D_SETT_CODICE;
ELSE
  BEGIN
    SELECT NVL(SEQUENZA,999999),CODICE
      INTO D_SETB_SEQUENZA,D_SETB_CODICE
      FROM SETTORI
     WHERE NUMERO = D_SETT_SETTORE_B
    ;
  END;
  IF D_SETT_SUDDIVISIONE = 3 THEN
     D_SETT_SETTORE_C   := D_POPI_SETTORE;
     D_SETC_SEQUENZA     := D_SETT_SEQUENZA;
     D_SETC_CODICE      := D_SETT_CODICE;
  ELSE
     BEGIN
SELECT NVL(SEQUENZA,999999),CODICE
  INTO D_SETC_SEQUENZA,D_SETC_CODICE
  FROM SETTORI
 WHERE NUMERO = D_SETT_SETTORE_C
;
     END;
  END IF;
END IF;
     END IF;
  END IF;
  IF P_D_F = 'D' THEN
     BEGIN
       SELECT FG.DAL,NVL(FI.SEQUENZA,999999),FG.CODICE,
      FG.QUALIFICA,QG.DAL,NVL(QU.SEQUENZA,999999),QG.CODICE,
      QG.CONTRATTO,CS.DAL,NVL(CO.SEQUENZA,999),CS.ORE_LAVORO,
      QG.LIVELLO,QG.RUOLO,NVL(RU.SEQUENZA,999),
      FG.PROFILO,NVL(PR.SEQUENZA,999),
      DECODE(FG.PROFILO,NULL,'F',
     DECODE(D_GEST_SINTETICO_PO,NULL,'F'
       ,'Q' ,'F'
       ,'L' ,'F'
       ,PR.SUDDIVISIONE_PO
   )
    ),
      FG.POSIZIONE,NVL(PF.SEQUENZA,999)
 INTO D_FIGI_DAL,D_FIGU_SEQUENZA,D_FIGI_CODICE,
      D_FIGI_QUALIFICA,D_QUGI_DAL,
      D_QUAL_SEQUENZA,D_QUGI_CODICE,
      D_QUGI_CONTRATTO,D_COST_DAL,D_CONT_SEQUENZA,
      D_COST_ORE_LAVORO,D_QUGI_LIVELLO,D_QUGI_RUOLO,
      D_RUOL_SEQUENZA,D_FIGI_PROFILO,D_PRPR_SEQUENZA,
      D_PRPR_SUDDIVISIONE_PO,D_FIGI_POSIZIONE,D_POFU_SEQUENZA
 FROM POSIZIONI_FUNZIONALI     PF,
      PROFILI_PROFESSIONALI    PR,
      RUOLI    RU,
      CONTRATTI_STORICI CS,
      CONTRATTI CO,
      QUALIFICHE_GIURIDICHE    QG,
      QUALIFICHE       QU,
      FIGURE_GIURIDICHE FG,
      FIGURE   FI
WHERE D_RIOR_DATA BETWEEN FG.DAL
  AND NVL(FG.AL,TO_DATE('3333333','J'))
  AND D_RIOR_DATA BETWEEN QG.DAL
  AND NVL(QG.AL,TO_DATE('3333333','J'))
  AND D_RIOR_DATA BETWEEN CS.DAL
  AND NVL(CS.AL,TO_DATE('3333333','J'))
  AND PF.PROFILO      (+) = FG.PROFILO
  AND PF.CODICE       (+) = FG.POSIZIONE
  AND PR.CODICE       (+) = FG.PROFILO
  AND RU.CODICE   = QG.RUOLO
  AND CS.CONTRATTO= QG.CONTRATTO
  AND CO.CODICE   = QG.CONTRATTO
  AND QG.NUMERO   = FG.QUALIFICA
  AND QU.NUMERO   = FG.QUALIFICA
  AND FG.NUMERO   = D_POPI_FIGURA
  AND FI.NUMERO   = D_POPI_FIGURA
       ;
     END;
     BEGIN
SELECT S.SEDE,D.CODICE,NVL(D.SEQUENZA,999999)
  INTO D_SETT_SEDE,D_SEDI_CODICE,D_SEDI_SEQUENZA
  FROM SEDI     D
      ,SETTORI  S
 WHERE S.NUMERO = D_POPI_SETTORE
   AND S.SEDE   = D.NUMERO (+)
;
     END;
 END IF;
 IF P_D_F = 'F' THEN
     BEGIN
       SELECT FG.DAL,NVL(FI.SEQUENZA,999999),FG.CODICE,
      QG.DAL,NVL(QU.SEQUENZA,999999),QG.CODICE,
      QG.CONTRATTO,CS.DAL,NVL(CO.SEQUENZA,999),CS.ORE_LAVORO,
      QG.LIVELLO,QG.RUOLO,NVL(RU.SEQUENZA,999),
      FG.PROFILO,NVL(PR.SEQUENZA,999),
      DECODE(FG.PROFILO,NULL,'F',
     DECODE(D_GEST_SINTETICO_PO,NULL,'F'
       ,'Q' ,'F'
       ,'L' ,'F'
       ,PR.SUDDIVISIONE_PO
   )
    ),
      FG.POSIZIONE,NVL(PF.SEQUENZA,999)
 INTO D_FIGI_DAL,D_FIGU_SEQUENZA,D_FIGI_CODICE,
      D_QUGI_DAL,D_QUAL_SEQUENZA,D_QUGI_CODICE,
      D_QUGI_CONTRATTO,D_COST_DAL,D_CONT_SEQUENZA,
      D_COST_ORE_LAVORO,D_QUGI_LIVELLO,D_QUGI_RUOLO,
      D_RUOL_SEQUENZA,D_FIGI_PROFILO,D_PRPR_SEQUENZA,
      D_PRPR_SUDDIVISIONE_PO,D_FIGI_POSIZIONE,D_POFU_SEQUENZA
 FROM POSIZIONI_FUNZIONALI     PF,
      PROFILI_PROFESSIONALI    PR,
      RUOLI    RU,
      CONTRATTI_STORICI CS,
      CONTRATTI CO,
      QUALIFICHE_GIURIDICHE    QG,
      QUALIFICHE       QU,
      FIGURE_GIURIDICHE FG,
      FIGURE   FI
WHERE D_RIOR_DATA BETWEEN FG.DAL
  AND NVL(FG.AL,TO_DATE('3333333','J'))
  AND D_RIOR_DATA BETWEEN QG.DAL
  AND NVL(QG.AL,TO_DATE('3333333','J'))
  AND D_RIOR_DATA BETWEEN CS.DAL
  AND NVL(CS.AL,TO_DATE('3333333','J'))
  AND PF.PROFILO      (+) = FG.PROFILO
  AND PF.CODICE       (+) = FG.POSIZIONE
  AND PR.CODICE       (+) = FG.PROFILO
  AND RU.CODICE   = QG.RUOLO
  AND CS.CONTRATTO= QG.CONTRATTO
  AND CO.CODICE   = QG.CONTRATTO
  AND QG.NUMERO   = D_FIGI_QUALIFICA
  AND QU.NUMERO   = QG.NUMERO
  AND FG.NUMERO   = D_POPI_FIGURA
  AND FI.NUMERO   = D_POPI_FIGURA
       ;
     END;
     BEGIN
SELECT D.CODICE,NVL(D.SEQUENZA,999999)
  INTO D_SEDI_CODICE,D_SEDI_SEQUENZA
  FROM SEDI     D
 WHERE D.NUMERO = D_SETT_SEDE
;
     EXCEPTION
WHEN NO_DATA_FOUND THEN
   D_SEDI_CODICE   := NULL;
   D_SEDI_SEQUENZA := 999999;
     END;
  END IF;
  BEGIN
    SELECT NVL(SEQUENZA,999999)
      INTO D_ATTI_SEQUENZA
      FROM ATTIVITA
     WHERE CODICE    = D_POPI_ATTIVITA
    ;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      D_ATTI_SEQUENZA := 999999;
  END;
      --
  D_CADO_ORE_PREVISTI :=
  NVL(D_PEGI_ORE,NVL(D_POPI_ORE,D_COST_ORE_LAVORO));
      --
      --  SITUAZIONE INIZIALE
      --
  IF D_PEGI_DAL < P_DAL THEN
     BEGIN
SELECT 1
  INTO D_NUMERO
  FROM DUAL
 WHERE NOT EXISTS
      (SELECT 1
 FROM PERIODI_GIURIDICI PG
WHERE P_DAL     BETWEEN PG.DAL AND
   NVL(PG.AL,TO_DATE('3333333','J'))
  AND PG.CI      = D_PEGI_CI
  AND (    D_PEGI_RILEVANZA
 = 'Q'
       AND PG.RILEVANZA  = 'I'
       OR  D_PEGI_RILEVANZA
 = 'S'
       AND PG.RILEVANZA  = 'E'
      )
      )
;
D_CADO_INIZIALE := D_CADO_INIZIALE + 1;
     EXCEPTION
WHEN NO_DATA_FOUND THEN NULL;
     END;
  END IF;
      --
      --  ASSUNZIONE.
      --
  IF D_PEGI_DAL <= P_AL  AND
     D_PEGI_DAL >= P_DAL THEN
     BEGIN
SELECT 1
  INTO D_NUMERO
  FROM DUAL
 WHERE EXISTS
       (SELECT 1
  FROM PERIODI_GIURIDICI PG
 WHERE PG.DAL     = D_PEGI_DAL
   AND PG.RILEVANZA       = 'P'
   AND PG.CI      = D_PEGI_CI
       )
   AND (    D_PEGI_RILEVANZA      = 'Q'
AND P_D_F      = 'D'
OR  D_PEGI_RILEVANZA      = 'S'
AND P_D_F      = 'F'
       )
;
D_CADO_ASSUNZIONI := D_CADO_ASSUNZIONI + 1;
     EXCEPTION
WHEN NO_DATA_FOUND THEN NULL;
     END;
  END IF;
      --
      --  CESSAZIONE.
      --
  IF NVL(D_PEGI_AL,TO_DATE('3333333','J')) <= P_AL  AND
     NVL(D_PEGI_AL,TO_DATE('3333333','J')) >= P_DAL THEN
     BEGIN
SELECT 1
  INTO D_NUMERO
  FROM DUAL
 WHERE EXISTS
       (SELECT 1
  FROM PERIODI_GIURIDICI PG
 WHERE NVL(PG.AL,TO_DATE('3333333','J'))
  =
       NVL(D_PEGI_AL,TO_DATE('3333333','J'))
   AND PG.RILEVANZA       = 'P'
   AND PG.CI      = D_PEGI_CI
       )
   AND (    D_PEGI_RILEVANZA      = 'Q'
AND P_D_F      = 'D'
OR  D_PEGI_RILEVANZA      = 'S'
AND P_D_F      = 'F'
       )
;
D_CADO_CESSAZIONI := D_CADO_CESSAZIONI + 1;
     EXCEPTION
WHEN NO_DATA_FOUND THEN NULL;
     END;
  END IF;
      --
      --  ACQUISIZIONI.
      --
  IF P_OPZIONE IS NULL THEN
     IF  D_PEGI_DAL       >= P_DAL
     AND D_PEGI_DAL       <= P_AL THEN
 BEGIN
    SELECT 1
      INTO D_NUMERO
      FROM DUAL
     WHERE NOT EXISTS
   (SELECT 1
      FROM PERIODI_GIURIDICI PG
     WHERE PG.DAL  = D_PEGI_DAL
       AND PG.RILEVANZA    = 'P'
       AND PG.CI   = D_PEGI_CI
   )
       AND (    D_PEGI_RILEVANZA      = 'Q'
    AND P_D_F      = 'D'
    OR  D_PEGI_RILEVANZA      = 'S'
    AND P_D_F      = 'F'
   )
       OR  (    D_PEGI_RILEVANZA      = 'I'
    AND P_D_F      = 'D'
    OR  D_PEGI_RILEVANZA      = 'E'
    AND P_D_F      = 'F'
   )
    ;
    D_CADO_ACQUISIZIONI := D_CADO_ACQUISIZIONI + 1;
 EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
 END;
     END IF;
     BEGIN
SELECT COUNT(*)
  INTO D_NUMERO
  FROM PERIODI_GIURIDICI PG
 WHERE NVL(PG.AL,TO_DATE('3333333','J'))
    BETWEEN D_PEGI_DAL
    AND NVL(D_PEGI_AL,TO_DATE('3333333','J'))
   AND NVL(PG.AL,TO_DATE('3333333','J'))
    BETWEEN P_DAL AND P_AL
   AND PG.CI = D_PEGI_CI
   AND PG.EVENTO  LIKE P_EVENTO
   AND PG.POSIZIONE       LIKE P_POSIZIONE
   AND (    D_PEGI_RILEVANZA = 'Q'
AND PG.RILEVANZA     = 'I'
AND P_D_F = 'D'
OR  D_PEGI_RILEVANZA = 'S'
AND PG.RILEVANZA     = 'E'
AND P_D_F = 'F'
       )
;
D_CADO_ACQUISIZIONI := D_CADO_ACQUISIZIONI + D_NUMERO;
     EXCEPTION
WHEN NO_DATA_FOUND THEN NULL;
     END;
  END IF;
      --
      --  RILASCI.
      --
  IF P_OPZIONE IS NULL THEN
     IF  NVL(D_PEGI_AL,TO_DATE('3333333','J'))  >= P_DAL
     AND NVL(D_PEGI_AL,TO_DATE('3333333','J'))  <= P_AL THEN
 BEGIN
    SELECT 1
      INTO D_NUMERO
      FROM DUAL
     WHERE NOT EXISTS
   (SELECT 1
      FROM PERIODI_GIURIDICI PG
     WHERE NVL(PG.AL,TO_DATE('3333333','J'))
   =
   NVL(D_PEGI_AL,TO_DATE('3333333','J'))
       AND PG.RILEVANZA    = 'P'
       AND PG.CI   = D_PEGI_CI
   )
       AND (    D_PEGI_RILEVANZA      = 'Q'
    AND P_D_F      = 'D'
    OR  D_PEGI_RILEVANZA      = 'S'
    AND P_D_F      = 'F'
   )
       OR  (    D_PEGI_RILEVANZA      = 'I'
    AND P_D_F      = 'D'
    OR  D_PEGI_RILEVANZA      = 'E'
    AND P_D_F      = 'F'
   )
    ;
    D_CADO_RILASCI := D_CADO_RILASCI + 1;
 EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
 END;
     END IF;
     BEGIN
SELECT COUNT(*)
  INTO D_NUMERO
  FROM PERIODI_GIURIDICI PG
 WHERE PG.DAL       BETWEEN D_PEGI_DAL
    AND NVL(D_PEGI_AL,TO_DATE('3333333','J'))
   AND PG.DAL       BETWEEN P_DAL AND P_AL
   AND PG.EVENTO  LIKE P_EVENTO
   AND PG.POSIZIONE       LIKE P_POSIZIONE
   AND PG.CI = D_PEGI_CI
   AND (    D_PEGI_RILEVANZA = 'Q'
AND PG.RILEVANZA     = 'I'
AND P_D_F = 'D'
OR  D_PEGI_RILEVANZA = 'S'
AND PG.RILEVANZA     = 'E'
AND P_D_F = 'F'
       )
;
D_CADO_RILASCI := D_CADO_RILASCI + D_NUMERO;
     EXCEPTION
WHEN NO_DATA_FOUND THEN NULL;
     END;
  END IF;
      --
      --  INSERIMENTO REGISTRAZIONE DOTAZIONE.
      --
  BEGIN
     IF D_CADO_INIZIALE     + D_CADO_ASSUNZIONI + D_CADO_CESSAZIONI +
D_CADO_ACQUISIZIONI + D_CADO_RILASCI    > 0 THEN
       INSERT INTO CALCOLO_DOTAZIONE
       (CADO_PRENOTAZIONE,CADO_RILEVANZA,CADO_LINGUE,
RIOR_DATA,POPI_SEDE_POSTO,
POPI_ANNO_POSTO,POPI_NUMERO_POSTO,POPI_POSTO,POPI_DAL,
POPI_RICOPRIBILE,POPI_GRUPPO,
POPI_PIANTA,SETP_SEQUENZA,SETP_CODICE,POPI_SETTORE,
SETT_SEQUENZA,SETT_CODICE,SETT_SUDDIVISIONE,SETT_SETTORE_G,
SETG_SEQUENZA,SETG_CODICE,SETT_SETTORE_A,SETA_SEQUENZA,
SETA_CODICE,SETT_SETTORE_B,SETB_SEQUENZA,SETB_CODICE,
SETT_SETTORE_C,SETC_SEQUENZA,SETC_CODICE,SETT_GESTIONE,
GEST_PROSPETTO_PO,GEST_SINTETICO_PO,
SETT_SEDE,SEDI_CODICE,SEDI_SEQUENZA,
POPI_FIGURA,FIGI_DAL,FIGU_SEQUENZA,FIGI_CODICE,FIGI_QUALIFICA,
QUGI_DAL,QUAL_SEQUENZA,QUGI_CODICE,QUGI_CONTRATTO,COST_DAL,
CONT_SEQUENZA,COST_ORE_LAVORO,QUGI_LIVELLO,FIGI_PROFILO,
PRPR_SEQUENZA,PRPR_SUDDIVISIONE_PO,
FIGI_POSIZIONE,POFU_SEQUENZA,
QUGI_RUOLO,RUOL_SEQUENZA,POPI_ATTIVITA,ATTI_SEQUENZA,
PEGI_POSIZIONE,POSI_SEQUENZA,PEGI_TIPO_RAPPORTO,
PEGI_EVENTO,EVGI_SEQUENZA,
PEGI_SEDE_DEL,PEGI_ANNO_DEL,PEGI_NUMERO_DEL,
CADO_ORE_PREVISTI,
CADO_PREVISTI,CADO_IN_PIANTA,CADO_IN_DEROGA,
CADO_IN_SOVRANNUMERO,CADO_IN_RILASCIO)
       VALUES
       (W_PRENOTAZIONE,1,P_LINGUE,D_RIOR_DATA,D_POPI_SEDE_POSTO,
D_POPI_ANNO_POSTO,D_POPI_NUMERO_POSTO,D_POPI_POSTO,D_POPI_DAL,
D_POPI_RICOPRIBILE,D_POPI_GRUPPO,D_POPI_PIANTA,
D_SETP_SEQUENZA,D_SETP_CODICE,D_POPI_SETTORE,
D_SETT_SEQUENZA,D_SETT_CODICE,
D_SETT_SUDDIVISIONE,D_SETT_SETTORE_G,
D_SETG_SEQUENZA,D_SETG_CODICE,D_SETT_SETTORE_A,D_SETA_SEQUENZA,
D_SETA_CODICE,D_SETT_SETTORE_B,D_SETB_SEQUENZA,D_SETB_CODICE,
D_SETT_SETTORE_C,D_SETC_SEQUENZA,D_SETC_CODICE,
D_SETT_GESTIONE,D_GEST_PROSPETTO_PO,D_GEST_SINTETICO_PO,
D_SETT_SEDE,D_SEDI_CODICE,D_SEDI_SEQUENZA,
D_POPI_FIGURA,D_FIGI_DAL,
D_FIGU_SEQUENZA,D_FIGI_CODICE,D_FIGI_QUALIFICA,
D_QUGI_DAL,D_QUAL_SEQUENZA,D_QUGI_CODICE,
D_QUGI_CONTRATTO,D_COST_DAL,
D_CONT_SEQUENZA,D_COST_ORE_LAVORO,
D_QUGI_LIVELLO,D_FIGI_PROFILO,
D_PRPR_SEQUENZA,D_PRPR_SUDDIVISIONE_PO,
D_FIGI_POSIZIONE,D_POFU_SEQUENZA,
D_QUGI_RUOLO,D_RUOL_SEQUENZA,D_POPI_ATTIVITA,D_ATTI_SEQUENZA,
D_PEGI_POSIZIONE,D_POSI_SEQUENZA,D_PEGI_TIPO_RAPPORTO,
D_PEGI_EVENTO,D_EVGI_SEQUENZA,
D_PEGI_SEDE_DEL,D_PEGI_ANNO_DEL,D_PEGI_NUMERO_DEL,
D_CADO_ORE_PREVISTI,
D_CADO_INIZIALE,D_CADO_ASSUNZIONI,D_CADO_CESSAZIONI,
D_CADO_ACQUISIZIONI,D_CADO_RILASCI)
       ;
     END IF;
  END;
END LOOP;
IF D_CONTA_CURSORE = 1 THEN
   CLOSE PRESENZE;
END IF;
END LOOP;
      EXCEPTION
WHEN OTHERS THEN
  D_ERRTEXT := SUBSTR(SQLERRM,1,240);
  D_PRENOTAZIONE := W_PRENOTAZIONE;
  ROLLBACK;
  INSERT INTO ERRORI_POGM (PRENOTAZIONE,VOCE_MENU,DATA,ERRORE)
  VALUES (D_PRENOTAZIONE,W_VOCE_MENU ,SYSDATE,D_ERRTEXT)
  ;
  COMMIT;
  RAISE FORM_TRIGGER_FAILURE;
      END;
      -- CALCOLO
PROCEDURE CALCOLO
      IS
      BEGIN
 BEGIN
    DELETE_TAB;
    SEQ_LINGUA;
    CC_DOTAZIONE;
    PPOCSIDP2.CC_NOMINATIVO(P_AL,p_EVENTO,P_POSIZIONE,P_DAL,P_D_F,w_prenotazione,w_voce_menu,p_opzione);
    PPOCSIDP3.RAGGR_POSTI(w_prenotazione,w_voce_menu);
    DEL_DETT_POSTI;
    COMMIT;
	 EXCEPTION WHEN FORM_TRIGGER_FAILURE THEN
		RAISE;
 END;
      END;
   PROCEDURE MAIN		(PRENOTAZIONE IN NUMBER,
		  			 PASSO IN NUMBER) is
    BEGIN
       ERRORE := to_char(null);
       IF PRENOTAZIONE != 0 THEN
  BEGIN  -- PRELEVA UTENTE DA DEPOSITARE IN CAMPI GLOBAL
     SELECT UTENTE
  , AMBIENTE
  , ENTE
  , GRUPPO_LING
  , VOCE_MENU
       INTO W_UTENTE
  , W_AMBIENTE
  , W_ENTE
  , W_LINGUA
  , W_VOCE_MENU
       FROM A_PRENOTAZIONI
      WHERE NO_PRENOTAZIONE = PRENOTAZIONE
     ;
  EXCEPTION
     WHEN OTHERS THEN NULL;
  END;
       END IF;
       BEGIN
 SELECT TO_DATE(PARA.VALORE,'DD/MM/YYYY')
   INTO P_DAL
   FROM A_PARAMETRI PARA
  WHERE PARA.NO_PRENOTAZIONE = PRENOTAZIONE
    AND PARA.PARAMETRO       = 'P_DAL'
 ;
       EXCEPTION
  WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
     BEGIN
SELECT TO_DATE('0101'||TO_CHAR(DATA,'YYYY'),'DDMMYYYY')
  INTO P_DAL
  FROM RIFERIMENTO_ORGANICO
;
     EXCEPTION
WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
   P_DAL := TO_DATE('01011901','DDMMYYYY');
     END;
       END;
       BEGIN
 SELECT TO_DATE(PARA.VALORE,'DD/MM/YYYY')
   INTO P_AL
   FROM A_PARAMETRI PARA
  WHERE PARA.NO_PRENOTAZIONE = PRENOTAZIONE
    AND PARA.PARAMETRO       = 'P_AL'
 ;
       EXCEPTION
  WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
     BEGIN
SELECT TO_DATE('3112'||TO_CHAR(DATA,'YYYY'),'DDMMYYYY')
  INTO P_AL
  FROM RIFERIMENTO_ORGANICO
;
     EXCEPTION
WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
   P_AL := TO_DATE('31121999','DDMMYYYY');
     END;
       END;
       BEGIN
 SELECT SUBSTR(PARA.VALORE,1,4)
   INTO P_EVENTO
   FROM A_PARAMETRI PARA
  WHERE PARA.NO_PRENOTAZIONE = PRENOTAZIONE
    AND PARA.PARAMETRO       = 'P_EVENTO'
 ;
       EXCEPTION
 WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
   P_EVENTO := '%';
       END;
       BEGIN
 SELECT SUBSTR(PARA.VALORE,1,4)
   INTO P_POSIZIONE
   FROM A_PARAMETRI PARA
  WHERE PARA.NO_PRENOTAZIONE = PRENOTAZIONE
    AND PARA.PARAMETRO       = 'P_POSIZIONE'
 ;
       EXCEPTION
 WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
   P_POSIZIONE := '%';
       END;
       BEGIN
 SELECT SUBSTR(PARA.VALORE,1,1)
   INTO P_D_F
   FROM A_PARAMETRI PARA
  WHERE PARA.NO_PRENOTAZIONE = PRENOTAZIONE
    AND PARA.PARAMETRO       = 'P_DF'
 ;
       EXCEPTION
 WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
   P_D_F := 'F';
       END;
       BEGIN
 SELECT SUBSTR(PARA.VALORE,1,1)
   INTO P_OPZIONE
   FROM A_PARAMETRI PARA
  WHERE PARA.NO_PRENOTAZIONE = PRENOTAZIONE
    AND PARA.PARAMETRO       = 'P_OPZIONE'
 ;
       EXCEPTION
 WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
   P_OPZIONE := NULL;
       END;
       W_PRENOTAZIONE := PRENOTAZIONE;
       -- MEMORIZZATO IN CASO DI AZZERAMENTO PER ROLLBACK
       CALCOLO;  -- ESECUZIONE DEL CALCOLO POSTI
       IF W_PRENOTAZIONE != 0 THEN
  IF SUBSTR(ERRORE,6,1) = '8' THEN
     UPDATE A_PRENOTAZIONI
SET ERRORE = 'P05808'
      WHERE NO_PRENOTAZIONE = W_PRENOTAZIONE
     ;
     COMMIT;
  ELSIF
     SUBSTR(errore,6,1) = '9' THEN
     UPDATE A_PRENOTAZIONI
SET ERRORE       = 'P05809'
  , PROSSIMO_PASSO = 91
      WHERE NO_PRENOTAZIONE = W_PRENOTAZIONE
     ;
     COMMIT;
  END IF;
       END IF;
    EXCEPTION
	       WHEN FORM_TRIGGER_FAILURE THEN
			NULL;
       WHEN OTHERS THEN
  BEGIN
     ROLLBACK;
     IF W_PRENOTAZIONE != 0 THEN
UPDATE A_PRENOTAZIONI
   SET ERRORE       = '*ABORT*'
     , PROSSIMO_PASSO = 99
WHERE NO_PRENOTAZIONE = W_PRENOTAZIONE
;
      COMMIT;
     END IF;
  EXCEPTION
     WHEN OTHERS THEN
NULL;
  END;
    END;
END;
/

